# Tetris Application - Modular Version Catalog
# 🎯 모듈별로 구분된 Type-Safe Dependencies

[versions]
# 🚀 Core Runtime & Build Tools
java = "21"
gradle = "8.12"

# 🌱 Spring Framework Ecosystem
spring-boot = "3.5.6"
spring-dependency-management = "1.1.7"

# 🎨 JavaFX Desktop
javafx = "21"
javafx-plugin = "0.1.0"

# 🛠️ Development Tools (모든 모듈 공통)
lombok = "1.18.30"

# 🧪 Testing Framework (모든 모듈 공통)
junit-jupiter = "5.11.4"
junit-platform = "1.11.4"
assertj = "3.27.6"
mockito = "5.14.2"

# 📊 Utilities
commons-lang3 = "3.19.0"
h2-database = "2.4.240"

# 🔧 Build Plugins
versions-plugin = "0.53.0"

[libraries]
# ============================================================================
# 🚀 COMMON DEPENDENCIES (모든 모듈에서 공통 사용)
# ============================================================================

# 🛠️ Common Development Tools
common-lombok = { module = "org.projectlombok:lombok", version.ref = "lombok" }

# 🧪 Common Testing Dependencies
common-junit-jupiter = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit-jupiter" }
common-junit-platform-launcher = { module = "org.junit.platform:junit-platform-launcher", version.ref = "junit-platform" }
common-assertj-core = { module = "org.assertj:assertj-core", version.ref = "assertj" }
common-mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockito" }
common-mockito-junit-jupiter = { module = "org.mockito:mockito-junit-jupiter", version.ref = "mockito" }

# 📊 Common Utilities
common-commons-lang3 = { module = "org.apache.commons:commons-lang3", version.ref = "commons-lang3" }

# ============================================================================
# � TETRIS-CORE MODULE (Core domain logic & algorithms)
# ============================================================================
# 현재 Core 모듈은 공통 의존성만 사용

# ============================================================================
# ⚙️ TETRIS-BACKEND MODULE (Spring Boot service layer)
# ============================================================================

# �🌱 Backend Spring Boot Dependencies
backend-spring-boot-starter = { module = "org.springframework.boot:spring-boot-starter", version.ref = "spring-boot" }
backend-spring-boot-starter-web = { module = "org.springframework.boot:spring-boot-starter-web", version.ref = "spring-boot" }
backend-spring-boot-starter-data-jpa = { module = "org.springframework.boot:spring-boot-starter-data-jpa", version.ref = "spring-boot" }
backend-spring-boot-starter-validation = { module = "org.springframework.boot:spring-boot-starter-validation", version.ref = "spring-boot" }
backend-spring-boot-starter-actuator = { module = "org.springframework.boot:spring-boot-starter-actuator", version.ref = "spring-boot" }
backend-spring-boot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test", version.ref = "spring-boot" }
backend-spring-boot-devtools = { module = "org.springframework.boot:spring-boot-devtools", version.ref = "spring-boot" }
backend-spring-boot-configuration-processor = { module = "org.springframework.boot:spring-boot-configuration-processor", version.ref = "spring-boot" }

# 🗄️ Backend Database Dependencies
backend-h2-database = { module = "com.h2database:h2", version.ref = "h2-database" }

# ============================================================================
# 🖥️ TETRIS-CLIENT MODULE (JavaFX desktop application)
# ============================================================================

# 🌱 Client Spring Boot Dependencies (DI container only)
client-spring-boot-starter = { module = "org.springframework.boot:spring-boot-starter", version.ref = "spring-boot" }
client-spring-boot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test", version.ref = "spring-boot" }
client-spring-boot-configuration-processor = { module = "org.springframework.boot:spring-boot-configuration-processor", version.ref = "spring-boot" }

# 🎨 Client JavaFX Dependencies
client-javafx-controls = { module = "org.openjfx:javafx-controls", version.ref = "javafx" }
client-javafx-fxml = { module = "org.openjfx:javafx-fxml", version.ref = "javafx" }

[bundles]
# ============================================================================
# 🚀 COMMON BUNDLES (모든 모듈에서 공통 사용)
# ============================================================================

# 🧪 Common Testing Bundle (모든 모듈 테스트용)
common-testing = [
    "common-junit-jupiter",
    "common-junit-platform-launcher",
    "common-assertj-core",
    "common-mockito-core",
    "common-mockito-junit-jupiter"
]

# 🛠️ Common Development Tools Bundle (모든 모듈 개발용)
common-development = [
    "common-lombok"
]

# ============================================================================
# ⚙️ BACKEND MODULE BUNDLES
# ============================================================================

# 🌱 Backend Spring Web Bundle
backend-spring-web = [
    "backend-spring-boot-starter-web",
    "backend-spring-boot-starter-validation"
]

# 🗄️ Backend Data Access Bundle
backend-data = [
    "backend-spring-boot-starter-data-jpa",
    "backend-h2-database"
]

# 🔧 Backend Development Bundle
backend-development = [
    "backend-spring-boot-devtools",
    "backend-spring-boot-configuration-processor"
]

# ============================================================================
# 🖥️ CLIENT MODULE BUNDLES
# ============================================================================

# 🎨 Client JavaFX Bundle
client-javafx = [
    "client-javafx-controls",
    "client-javafx-fxml"
]

# 🌱 Client Spring Bundle (DI container only)
client-spring = [
    "client-spring-boot-starter",
    "client-spring-boot-configuration-processor"
]

[plugins]
# 🌱 Spring Boot Plugins
spring-boot = { id = "org.springframework.boot", version.ref = "spring-boot" }
spring-dependency-management = { id = "io.spring.dependency-management", version.ref = "spring-dependency-management" }

# 🎨 JavaFX Plugin
javafx = { id = "org.openjfx.javafxplugin", version.ref = "javafx-plugin" }

# 🔧 Utility Plugins
versions = { id = "com.github.ben-manes.versions", version.ref = "versions-plugin" }
