# ===============================================================================
# Tetris Application - Environment Variables Example
# 이 파일을 .env로 복사하여 사용하세요
# ===============================================================================
# ⚠️  사용 방법:
# 1. 이 파일을 .env로 복사: cp .env.example .env
# 2. .env 파일에서 실제 값으로 변경
# 3. .env 파일은 절대 Git에 커밋하지 마세요!
# ===============================================================================

# ===============================================================================
# 🌐 GLOBAL - 전체 프로젝트 공통 설정
# ===============================================================================

# --- Gradle 빌드 시스템 설정 ---
# Gradle JVM 메모리 설정 (gradlew, gradlew.bat에서 사용)
GRADLE_OPTS=-Xmx2048m -Xms512m

# Java 컴파일러 옵션
JAVA_OPTS=-Dfile.encoding=UTF-8

# Gradle 데몬 메모리 설정
org.gradle.jvmargs=-Xmx2048m -XX:MaxMetaspaceSize=512m

# Gradle 병렬 빌드 활성화
org.gradle.parallel=true

# Gradle 캐시 활성화
org.gradle.caching=true

# --- 환경 구분 ---
# 현재 실행 환경 (dev, staging, prod)
ENVIRONMENT=dev


# ===============================================================================
# ⚙️ TETRIS-BACKEND MODULE
# ===============================================================================

# -------------------------------------------------------------------------------
# 📄 application.properties 관련 설정
# 파일: tetris-backend/src/main/resources/application.properties
# -------------------------------------------------------------------------------

# --- Spring Boot 기본 설정 ---
SPRING_APPLICATION_NAME=Tetris Backend Server
SPRING_PROFILES_ACTIVE=backend-dev

# --- 서버 설정 ---
# Backend 서버 포트
SERVER_PORT=8080

# --- MySQL 데이터베이스 연결 정보 ---
# MySQL 호스트 주소
DB_HOST=localhost

# MySQL 포트
DB_PORT=3306

# MySQL 데이터베이스 이름
DB_NAME=tetris_dev

# MySQL 사용자 이름 (🔑 실제 값으로 변경하세요)
DB_USERNAME=your_mysql_username

# MySQL 사용자 비밀번호 (🔑 실제 값으로 변경하세요)
DB_PASSWORD=your_secure_password

# --- JPA/Hibernate 설정 ---
# DDL 자동 생성 전략 (create, create-drop, update, validate, none)
SPRING_JPA_HIBERNATE_DDL_AUTO=update

# SQL 쿼리 로깅
SPRING_JPA_SHOW_SQL=true

# SQL 쿼리 포맷팅
SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL=true


# -------------------------------------------------------------------------------
# 📄 docker-compose.yaml 관련 설정
# 파일: tetris-backend/docker-compose.yaml
# -------------------------------------------------------------------------------

# --- Docker MySQL 컨테이너 설정 ---
# MySQL Root 사용자 비밀번호 (🔑 실제 값으로 변경하세요)
MYSQL_ROOT_PASSWORD=your_root_password

# 생성할 데이터베이스 이름
MYSQL_DATABASE=tetris_dev

# 생성할 MySQL 사용자 이름 (🔑 실제 값으로 변경하세요)
MYSQL_USER=your_mysql_username

# 생성할 MySQL 사용자 비밀번호 (🔑 실제 값으로 변경하세요)
MYSQL_PASSWORD=your_secure_password

# 호스트에서 접속할 MySQL 포트
MYSQL_HOST_PORT=3306

# MySQL 컨테이너 이름
MYSQL_CONTAINER_NAME=tetris-mysql

# MySQL 이미지 버전
MYSQL_IMAGE_VERSION=8.0


# -------------------------------------------------------------------------------
# 📄 application-desktop-client.properties 관련 설정
# 파일: tetris-backend/src/main/resources/application-desktop-client.properties
# -------------------------------------------------------------------------------

# --- H2 데이터베이스 설정 (Desktop Client용) ---
# H2 데이터베이스 파일 저장 경로
H2_DB_PATH=~/.tetris/database/tetris-local

# H2 데이터베이스 사용자 이름
H2_USERNAME=sa

# H2 데이터베이스 비밀번호 (기본값은 비어있음)
H2_PASSWORD=

# H2 Console 활성화 여부 (개발/디버깅용)
H2_CONSOLE_ENABLED=false


# ===============================================================================
# 🖥️ TETRIS-CLIENT MODULE
# ===============================================================================

# -------------------------------------------------------------------------------
# 📄 application.properties 관련 설정
# 파일: tetris-client/application.properties
# -------------------------------------------------------------------------------

# --- Client Application 기본 설정 ---
CLIENT_SPRING_APPLICATION_NAME=Tetris Desktop Game
CLIENT_SPRING_PROFILES_ACTIVE=desktop-client

# --- JavaFX 설정 ---
# JavaFX Preloader 활성화 여부
JAVAFX_PRELOADER_ENABLED=false

# JavaFX Stage 크기 조절 가능 여부
JAVAFX_STAGE_RESIZABLE=false

# JavaFX Stage 항상 위 설정
JAVAFX_STAGE_ALWAYS_ON_TOP=false

# --- 게임 설정 ---
# 게임 초기 레벨
TETRIS_GAME_INITIAL_LEVEL=1

# 게임 최대 레벨
TETRIS_GAME_MAX_LEVEL=15

# 레벨 당 제거해야 할 라인 수
TETRIS_GAME_LINES_PER_LEVEL=10

# 초기 블록 낙하 간격 (밀리초)
TETRIS_GAME_INITIAL_DROP_INTERVAL=1000

# --- 사운드 설정 ---
# 사운드 효과 활성화 여부
TETRIS_SOUND_ENABLED=true

# 사운드 볼륨 (0.0 ~ 1.0)
TETRIS_SOUND_VOLUME=0.5

# --- UI 설정 ---
# UI 테마 (dark, light)
TETRIS_UI_THEME=dark

# UI 애니메이션 활성화 여부
TETRIS_UI_ANIMATION_ENABLED=true

# 게임 보드 그리드 표시 여부
TETRIS_UI_SHOW_GRID=true

# 고스트 피스(미리보기) 표시 여부
TETRIS_UI_SHOW_GHOST_PIECE=true

# --- 점수 설정 ---
# 1줄 제거 시 점수
TETRIS_SCORE_SINGLE_LINE=100

# 2줄 제거 시 점수
TETRIS_SCORE_DOUBLE_LINE=300

# 3줄 제거 시 점수
TETRIS_SCORE_TRIPLE_LINE=500

# 4줄 제거 시 점수 (Tetris)
TETRIS_SCORE_TETRIS_LINE=800

# --- 저장 설정 ---
# 자동 저장 활성화 여부
TETRIS_SAVE_AUTO_SAVE=true

# 게임 데이터 저장 위치
TETRIS_SAVE_LOCATION=${user.home}/.tetris/

# --- 국제화 설정 ---
# 메시지 번들 기본 경로
SPRING_MESSAGES_BASENAME=messages

# 메시지 인코딩
SPRING_MESSAGES_ENCODING=UTF-8


# ===============================================================================
# 🔧 STAGING/PRODUCTION 환경 추가 설정
# ===============================================================================
# Staging이나 Production 환경에서 사용할 추가 설정들을 여기에 작성하세요.
# 예: 외부 API 키, 클라우드 서비스 인증 정보 등

# --- 예시: 외부 서비스 설정 ---
# API_KEY=your_api_key_here
# CLOUD_STORAGE_BUCKET=your_bucket_name
# REDIS_HOST=your_redis_host
# REDIS_PORT=6379
# REDIS_PASSWORD=your_redis_password


# ===============================================================================
# 📝 STAGING 환경 체크리스트
# ===============================================================================
# Staging 환경에 배포하기 전에 다음 항목들을 확인하세요:
#
# ✅ 1. 모든 비밀번호를 강력한 값으로 변경했나요?
# ✅ 2. ENVIRONMENT=staging으로 설정했나요?
# ✅ 3. SPRING_PROFILES_ACTIVE를 적절히 설정했나요?
# ✅ 4. 데이터베이스 연결 정보가 올바른가요?
# ✅ 5. 외부 API 키가 모두 설정되었나요?
# ✅ 6. 로그 레벨이 적절한가요?
# ✅ 7. JVM 메모리 설정이 적절한가요?
# ✅ 8. 불필요한 개발 도구가 비활성화되었나요? (H2 Console 등)
